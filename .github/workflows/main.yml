# .github/workflows/recover-realmedia.yml
name: Recover RealMedia from .ram

on:
  workflow_dispatch:
    inputs:
      ram_url:
        description: 'ダウンロードしたい .ram ファイルの URL'
        required: true
      use_waybackpack:
        description: '全スナップショットを waybackpack で取得する場合は true'
        required: false
        default: 'false'
      push_to_repo:
        description: 'ダウンロードした音源をリポジトリにコミット＆プッシュする場合は true'
        required: false
        default: 'false'

jobs:
  recover:
    runs-on: ubuntu-latest
    steps:
      # 1. リポジトリをチェックアウト（コミット＆プッシュ用に資格情報を保持）
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      # 2. jq, waybackpack をインストール
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          python3 -m pip install --upgrade pip
          pip install waybackpack

      # 3. .ram をダウンロード
      - name: Download .ram
        run: |
          RAM_URL="${{ github.event.inputs.ram_url }}"
          RAM_FILE=$(basename "$RAM_URL")
          echo "Downloading $RAM_URL → $RAM_FILE"
          curl -fSL "$RAM_URL" -o "$RAM_FILE"
          echo "ram_file=$RAM_FILE" >> $GITHUB_ENV

      # 4. .ram からメディア URL を抽出
      - name: Extract media URL
        run: |
          MEDIA_URL=$(grep -Eo 'https?://[^ ]+' "$ram_file" | head -n1)
          if [ -z "$MEDIA_URL" ]; then
            echo "::error::.ram 内に URL が見つかりませんでした"
            exit 1
          fi
          echo "media_url=$MEDIA_URL" >> $GITHUB_ENV

      # 5. 直接ダウンロードを試行
      - name: Attempt direct download
        id: direct
        run: |
          MEDIA_FILE=$(basename "${{ env.media_url }}")
          if curl -fSL "${{ env.media_url }}" -o "$MEDIA_FILE"; then
            echo "::notice::Direct download succeeded: $MEDIA_FILE"
            echo "downloaded_file=$MEDIA_FILE" >> $GITHUB_ENV
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "::notice::Direct download failed"
            echo "success=false" >> $GITHUB_OUTPUT
          fi

      # 6. 直接が失敗なら Wayback Machine 経由で復旧
      - name: Fallback via Wayback Machine
        if: steps.direct.outputs.success == 'false'
        run: |
          echo "Query CDX API for ${media_url}"
          cdx=$(curl -s "https://web.archive.org/cdx/search/cdx?url=${media_url}&output=json")
          TS=$(echo "$cdx" | jq -r '.[1][1]')
          if [ -z "$TS" ] || [ "$TS" == "null" ]; then
            echo "::error::スナップショットが見つかりませんでした"
            exit 1
          fi
          SNAP_URL="https://web.archive.org/web/$TS/${media_url}"
          SNAP_FILE="$(basename "${media_url%.*}")-$TS.${media_url##*.}"
          echo "Downloading snapshot: $SNAP_URL → $SNAP_FILE"
          curl -fSL "$SNAP_URL" -o "$SNAP_FILE"
          echo "downloaded_file=$SNAP_FILE" >> $GITHUB_ENV

      # 7. 全スナップショットを waybackpack で取得（オプション）
      - name: Download all snapshots with waybackpack
        if: steps.direct.outputs.success == 'false' && github.event.inputs.use_waybackpack == 'true'
        run: |
          waybackpack "${{ env.media_url }}" --timestamp all

      # 8. リポジトリにコミット＆プッシュ（オプション）
      - name: Commit & push recovered media
        if: github.event.inputs.push_to_repo == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add *.rm *.warc.gz || true
          git commit -m "Add recovered media from ${{ github.event.inputs.ram_url }}" || echo "No changes to commit"
          git push

      # 9. Artifacts にアップロード（push_to_repo が false のとき）
      - name: Upload recovered files
        if: github.event.inputs.push_to_repo == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: recovered-media
          path: |
            '*.rm'
            '*.warc.gz'
          retention-days: 7
